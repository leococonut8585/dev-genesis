name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Dev Genesis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
      working-directory: ./backend
      
    - name: Verify dependencies
      run: go mod verify
      working-directory: ./backend
      
    - name: Build
      run: make build
      working-directory: ./backend
      
    - name: Test
      run: go test -v ./...
      working-directory: ./backend
      
    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -o ../dev-genesis.exe cmd/server/main.go
      working-directory: ./backend
      
    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o ../dev-genesis-linux cmd/server/main.go
      working-directory: ./backend
      
    - name: Build for macOS
      run: GOOS=darwin GOARCH=amd64 go build -o ../dev-genesis-macos cmd/server/main.go
      working-directory: ./backend
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          dev-genesis.exe
          dev-genesis-linux
          dev-genesis-macos

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Dev Genesis v1.0.${{ github.run_number }}
        body: |
          ## Dev Genesis - One-click Development Environment Setup
          
          ### ðŸš€ What's New
          - Automated installation of Python, Node.js, Git, VS Code, WSL2, and Claude Code
          - Beautiful real-time progress UI
          - Parallel installation support
          - Retry mechanism for network errors
          
          ### ðŸ“¦ Downloads
          - **Windows**: `dev-genesis.exe`
          - **Linux**: `dev-genesis-linux`
          - **macOS**: `dev-genesis-macos`
          
          ### ðŸŽ¯ Usage
          1. Download the appropriate binary for your system
          2. Run the executable
          3. Click the "GENESIS" button
          4. Watch the magic happen!
        files: |
          dev-genesis.exe
          dev-genesis-linux
          dev-genesis-macos
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}